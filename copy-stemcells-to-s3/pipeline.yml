resources:
- name: diagnostic-report
  type: s3
  source:
    access_key_id: ((s3_access_key_id))
    secret_access_key: ((s3_secret_access_key))
    endpoint: ((s3_endpoint))
    bucket: ((s3_bucket))
    regexp: "diagnostic_reports/diagnostic_report_(.*).json"

- name: stemcells-tarball
  type: s3
  source:
    access_key_id: ((s3_access_key_id))
    secret_access_key: ((s3_secret_access_key))
    endpoint: ((s3_endpoint))
    bucket: ((s3_bucket))
    regexp: "stemcell_tarballs/stemcells_for_report_v(.*).tar"

jobs:
- name: stemcells->s3
  plan:
  - get: diagnostic-report
    trigger: true
  - task: add-missing-stemcells-to-s3
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: czero/cflinuxfs2}
      inputs:
        - name: diagnostic-report
      params:
        PIVNET_API_TOKEN: ((pivnet_token))
        AWS_ACCESS_KEY_ID: ((s3_access_key_id))
        AWS_SECRET_ACCESS_KEY: ((s3_secret_access_key))
        S3_ENDPOINT: ((s3_endpoint))
        S3_BUCKET: ((s3_bucket))
      run:
        path: bash
        args:
        - -c
        - |
          set -eu

          diagnostic_report=$(ls diagnostic-report/*.json)

          iaas=$(jq --raw-output '.infrastructure_type' < $diagnostic_report)
          stemcells=$(
            jq --raw-output '.added_products.deployed | map(.stemcell) | unique | .[]' < $diagnostic_report
          )

          for stemcell in "$stemcells"; do
            set +e
            aws s3 --endpoint-url $S3_ENDPOINT ls "s3://${S3_BUCKET}/stemcells/${stemcell}" 1>/dev/null
            set -e
            status=$?
            if [ $status -eq 0 ]; then
              echo "Found ${stemcell} in S3; skipping upload"
            else
              version=$(echo $stemcell | grep -Eo "[0-9]+(\.[0-9]+)?")
              download_dir=$(mktemp -d)
              pivnet-cli download-product-files \
                --product-slug stemcells \
                --release-version $version \
                --glob "*${iaas}*" \
                --download-dir $download_dir
              aws s3 --endpoint-url $S3_ENDPOINT cp $download_dir/* "s3://${S3_BUCKET}/stemcells/${stemcell}"
              rm -rf $download_dir
            fi
          done

- name: create-stemcells-tarball-for-report
  plan:
  - get: diagnostic-report
    trigger: true
    passed: ["stemcells->s3"]
  - task: create-tarball
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: czero/cflinuxfs2}
      inputs:
        - name: diagnostic-report
      outputs:
        - name: stemcell-tarball
      params:
        PIVNET_API_TOKEN: ((pivnet_token))
        AWS_ACCESS_KEY_ID: ((s3_access_key_id))
        AWS_SECRET_ACCESS_KEY: ((s3_secret_access_key))
        S3_ENDPOINT: ((s3_endpoint))
        S3_BUCKET: ((s3_bucket))
      run:
        path: bash
        args:
        - -c
        - |
          set -eu

          diagnostic_report=$(ls diagnostic-report/*.json)

          stemcells=$(
            jq --raw-output '.added_products.deployed | map(.stemcell) | unique | .[]' < $diagnostic_report
          )

          mkdir -p stemcell-tarball-contents

          for stemcell in "$stemcells"; do
            aws s3 --endpoint-url $S3_ENDPOINT cp "s3://${S3_BUCKET}/stemcells/${stemcell}" stemcell-tarball-contents/
          done

          version=$(cat diagnostic_report/version)
          tar cf "stemcell-tarball/stemcells_for_report_v${version}.tar" -C stemcell-tarball-contents .
  - put: stemcells-tarball
    params:
      file: "stemcell-tarball/*.tar"
